
UDP шлюз для MAX31850/MAX31851 (любой порт, постоянное чтение)
ВНИМАНИЕ: НЕ ПРОВЕРЕНО НА ЖЕЛЕЗЕ
С заданной периодичностью читает с микросхем и сохраняет результаты в буфер. Микросхемы
могут управляться с разных потоков. Каждый поток с определенной периодичностью 
подает команду всем своим микросхемам на измерение температуры, ждет, когда они
сделают свою работу и читает результаты из их памяти в свой буфер.  По
запросу клиента сразу возвращает результат из буфера. Количество подключаемых микросхем
не ограничивается программой. Один пин - несколько датчиков. Есть возможность 
линейной коррекции измерений.


1 Установка
1.1 Требования
Скрипт-установщик работает в командной оболочке bash.
1.2 Настройка перед установкой:
- место установки исполняемого файла: файл build.sh константа INST_DIR
- место установки файла конфигурации: файл build.sh константа CONF_DIR (должна соответствовать CONF_DIR из main.h)
- см. ./lib/gpio/README
1.3 Команды для установки:
cd gwu50pc
Полная установка:
sudo ./build.sh full
Полная установка, не затрагивая конфигурационных файлов:
sudo ./build.sh full_nc
Для тестирования (файлы не копируются за пределы текущей папки):
sudo ./build.sh part_debug

2 Настройка после установки:
Общие настройки демон читает из файла CONF_MAIN_FILE (main.h),
 где
 port - порт (должен быть уникальным в рамках хоста);
Настройки для датчиков демон читает из файла CONF_DEVICE_FILE (main.h):
 где
 id - сетевой идентификатор, по котором клиент будет читать измеренную датчиком температуру (целое число; задается произвольно; нельзя повторять);
 pin - физический номер порта к которому подключен датчик DS50B20;
 address - 16-битный уникальный адрес датчика (используй утилиту 1wgr, чтобы его
 узнать);
 lcorrection_id - идентификатор набора параметров из файла настройки коррекции измерений (CONF_LCORRECTION_FILE);
Настройки для потоков демон читает из файла CONF_THREAD_FILE (main.h):
 где
 id - идентификатор потока (целое число; задается произвольно; нельзя повторять);
 cd_sec и cd_nsec - минимальная продолжительность цикла чтения со всех датчиков потока;
Для привязки датчиков к потокам служит файл CONF_THREAD_DEVICE_FILE (main.h):
 где
 thread_id - идентификатор потока (соответствует id из файла CONF_THREAD_FILE);
 device_id - идентификатор датчика (соответствует id из файла CONF_DEVICE_FILE; нельзя повторять в файле и для одного потока);
Не читайте с датчиков, подключенных к одним и тем же портам с разных потоков.
Настройки для коррекции измерений демон читает из файла CONF_LCORRECTION_FILE (main.h):
 id - идентификатор набора параметров (целое число; задается произвольно; нельзя повторять);
 factor - коэффициент;
 delta - приращение.
Исходный код: ./lib/lcorrection.c 
3 Запуск
При полной установке запускается автоматически, вмести с операционной системой.
sudo gwu50pc
В режиме отладки (не отключается от терминала и выдает сообщения):
sudo gwu50pc_dbg
Если приложение установлено для тестирования:
sudo ./gwu50pc_dbg

4 Управление
4.1 Список команд
см. ./util.c printHelp()

4.2 Графический интерфейс пользователя
для чтения результатов измерений:
https://github.com/arinichevN/monitor_cl 
для отправки общих для всех демонов команд:
https://github.com/arinichevN/app_cl

4.3 Примеры
Для рассылки udp пакетов используется утилита udpcl (https://github.com/arinichevN/udpcl)
Утилита netcat не подходит, так как разрывает пакеты, встречая символ '\n'
Параметры утилиты udpcl следует заменить на свои.
перезагрузка с чтением всех настроек:
udpcl ars '' 192.168.1.250 49162 2
запрос температуры для датчика №1 и №2:
udpcl gfts 1\n2\n 192.168.1.250 49162 2

